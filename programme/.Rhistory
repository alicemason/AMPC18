# - type: the type of plot to be drawn where "n" means do not plot the points
# - xlab: the title of the x axis
# - ylab: the title of the y axis
# - main: the overall title for the plot
# - axes: when false it suppresses the axis automatically generated by the high level plotting function so that we can create custom axis
plot(x, y, type="n", xlab = "Height (inches)", ylab = "", main = "Distribution of Men's Heights", axes = FALSE)
# Connect all of the points with each other to form the bell curve
lines(x, y)
# Returns a vector of boolean values representing whether the x value is between the two bounds then
# filters the values so that only the ones within the bounds are returned
bounds_filter <- x >= lower_bound & x <= upper_bound
x_within_bounds <- x[bounds_filter]
y_within_bounds <- y[bounds_filter]
# We want the filled in area to extend all the way down to the y axis which is why these two lines are necessary
# It makes the first point in the polygon (lower_bound, 0) and the last point (upper_bound, 0)
x_polygon <- c(lower_bound, x_within_bounds, upper_bound)
y_polygon <- c(0, y_within_bounds, 0)
polygon(x_polygon, y_polygon, col = "red")
# Now determine the probability that someone falls between the two bounds so we can display it above the curve
# Remember that pnorm returns the probability that a normally distributed random number will be less than the given number
probability_within_bounds <- pnorm(upper_bound, population_mean, sd) - pnorm(lower_bound, population_mean, population_sd)
# Concatenate the various values so we can display it on the curve
text <- paste("p(", lower_bound, "< height <", upper_bound, ") =", signif(probability_within_bounds, digits = 3))
# Display the text on the plot. The default "side" parameter is 3, representing the top of the plot.
mtext(text)
# Add an axis to the current plot, where:
# - side: which side of the plot the axis should be drawn on where 1 represents the bottom
# - at: the points at which the tick-marks are to be drawn
# - pos: the coordinate at which the axis line is to be drawn
sd_axis_bounds = 5
axis_bounds <- seq(-sd_axis_bounds * population_sd + population_mean, sd_axis_bounds * population_sd + population_mean, by = population_sd)
axis(side = 1, at = axis_bounds, pos = 0)
x <- seq(-4, 4, length=100)
hx <- dnorm(x)
degf <- c(1, 3, 8, 30)
colors <- c("red", "blue", "darkgreen", "gold", "black")
labels <- c("df=1", "df=3", "df=8", "df=30", "normal")
plot(x, hx, type="l", lty=2, xlab="x value",
ylab="Density", main="Comparison of t Distributions")
for (i in 1:4){
lines(x, dt(x,degf[i]), lwd=2, col=colors[i])
}
legend("topright", inset=.05, title="Distributions",
labels, lwd=2, lty=c(1, 1, 1, 1, 2), col=colors)
x <- seq(-4, 4, length=100)
hx <- dnorm(x)
degf <- c(10, 50, 40, 30)
colors <- c("red", "blue", "darkgreen", "gold", "black")
labels <- c("df=1", "df=3", "df=8", "df=30", "normal")
plot(x, hx, type="l", lty=2, xlab="x value",
ylab="Density", main="Comparison of t Distributions")
for (i in 1:4){
lines(x, dt(x,degf[i]), lwd=2, col=colors[i])
}
legend("topright", inset=.05, title="Distributions",
labels, lwd=2, lty=c(1, 1, 1, 1, 2), col=colors)
a<-dnorm(1000,50,10)
plot(a)
sd<-10
mean<-50
x <- seq(-4, 4, length = 1000) * sd +mean
y <- dnorm(x, mean, sd)
plot(x, y, type="n", xlab = "Values", ylab = "", main = "Narrow Distrubution", axes = FALSE)
x
plot(x, y, xlab = "Values", ylab = "", main = "Narrow Distrubution", axes = FALSE)
sd<-30
mean<-50
x <- seq(-4, 4, length = 1000) * sd +mean
y <- dnorm(x, mean, sd)
plot(x, y, xlab = "Values", ylab = "", main = "Narrow Distrubution", axes = FALSE)
sd<-30
mean<-50
x <- seq(-4, 4, length = 1000) * sd +mean
y <- dnorm(x, mean, sd)
plot(x, y, xlab = "Values", ylab = "", main = "Narrow Distrubution", axes = FALSE)
sd<-50
mean<-50
x <- seq(-4, 4, length = 1000) * sd +mean
y <- dnorm(x, mean, sd)
plot(x, y, xlab = "Values", ylab = "", main = "Narrow Distrubution", axes = FALSE)
x
sd<-5
mean<-50
x <- seq(-4, 4, length = 1000) * sd +mean
y <- dnorm(x, mean, sd)
plot(x, y, xlab = "Values", ylab = "", main = "Narrow Distrubution", axes = FALSE)
plot(x, y, xlab = "Values", ylab = "", main = "Narrow Distrubution")
sd<-5
mean<-50
x <- seq(-4, 4, length = 1000) * sd +mean
y <- dnorm(x, mean, sd)
plot(x, y, xlab = "Values", ylab = "Density", main = "Narrow Distrubution")
sd<-10
mean<-50
x <- seq(-4, 4, length = 1000) * sd +mean
y <- dnorm(x, mean, sd)
plot(x, y, xlab = "Values", ylab = "Density", main = "Narrow Distrubution")
sd<-10
mean<-50
x <- seq(-4, 4, length = 1000) * sd +mean
y <- dnorm(x, mean, sd)
plot(x, y, xlab = "Values", ylab = "Density", main = "Narrow Distrubution", xlim=c(0, 100), ylim=c(0, 1)))
sd<-10
mean<-50
x <- seq(-4, 4, length = 1000) * sd +mean
y <- dnorm(x, mean, sd)
plot(x, y, xlab = "Values", ylab = "Density", main = "Narrow Distrubution", xlim=c(0, 100), ylim=c(0, 1))
sd<-10
mean<-50
x <- seq(-4, 4, length = 1000) * sd +mean
y <- dnorm(x, mean, sd)
plot(x, y, xlab = "Values", ylab = "Density", main = "Narrow Distrubution", xlim=c(0, 100), ylim=c(0, 1))
sd<-10
mean<-50
x <- seq(-4, 4, length = 1000) * sd +mean
y <- dnorm(x, mean, sd)
plot(x, y, xlab = "Values", ylab = "Density", main = "Narrow Distrubution", xlim=c(0, 100), ylim=c(0, 1))
sd<-10
mean<-50
x <- seq(-4, 4, length = 1000) * sd +mean
y <- dnorm(x, mean, sd)
plot(x, y, xlab = "Values", ylab = "Density", main = "Narrow Distrubution", xlim=c(0, 100), ylim=c(0,0.4))
sd<-10
mean<-50
x <- seq(-4, 4, length = 1000) * sd +mean
y <- dnorm(x, mean, sd)
plot(x, y, xlab = "Values", ylab = "Density", main = "Narrow Distrubution", xlim=c(0, 100), ylim=c(0,0.1))
sd<-50
mean<-50
x <- seq(-4, 4, length = 1000) * sd +mean
y <- dnorm(x, mean, sd)
plot(x, y, xlab = "Values", ylab = "Density", main = "Narrow Distrubution", xlim=c(0, 100), ylim=c(0,0.1))
sd<-30
mean<-50
x <- seq(-4, 4, length = 1000) * sd +mean
y <- dnorm(x, mean, sd)
plot(x, y, xlab = "Values", ylab = "Density", main = "Narrow Distrubution", xlim=c(0, 100), ylim=c(0,0.1))
sd<-20
mean<-50
x <- seq(-4, 4, length = 1000) * sd +mean
y <- dnorm(x, mean, sd)
plot(x, y, xlab = "Values", ylab = "Density", main = "Narrow Distrubution", xlim=c(0, 100), ylim=c(0,0.1))
sd<-20
mean<-50
x <- seq(-4, 4, length = 1000) * sd +mean
y <- dnorm(x, mean, sd)
plot(x, y, xlab = "Values", ylab = "Density", main = "Narrow Distrubution", xlim=c(0, 100), ylim=c(0,0.0.5))
sd<-20
mean<-50
x <- seq(-4, 4, length = 1000) * sd +mean
y <- dnorm(x, mean, sd)
plot(x, y, xlab = "Values", ylab = "Density", main = "Narrow Distrubution", xlim=c(0, 100), ylim=c(0,0.5))
y
x
sd<-20
mean<-50
x <- seq(-4, 4, length = 1000) * sd +mean
y <- dnorm(x, mean, sd)
plot(x, y, xlab = "Values", ylab = "Density", main = "Narrow Distrubution", ylim=c(0,0.5))
sd<-20
mean<-50
x <- seq(-4, 4, length = 1000) * sd +mean
y <- dnorm(x, mean, sd)
plot(x, y, xlab = "Values", ylab = "Density", main = "Narrow Distrubution", axis=FALSE)
sd<-20
mean<-50
x <- seq(-4, 4, length = 1000) * sd +mean
y <- dnorm(x, mean, sd)
plot(x, y, xlab = "Values", ylab = "Density", main = "Narrow Distrubution", axes=FALSE)
axis(2, seq(0, 1, 0.2))
axis(1, seq(0, 1, 0.2))
plot(x, y, xlab = "Values", main = "Narrow Distrubution", axes=FALSE)
plot(x, y, xlab = "Values", main = "Narrow Distrubution", axes=FALSE)
plot(x, y, xlab = "Values", ylab = "", main = "Narrow Distrubution", axes=FALSE)
mean<-500
sd<-20
mean<-500
x <- seq(-4, 4, length = 1000) * sd +mean
y <- dnorm(x, mean, sd)
plot(x, y, xlab = "Values", ylab = "", main = "Narrow Distrubution", axes=FALSE)
sd<-50
mean<-50
x <- seq(-4, 4, length = 1000) * sd +mean
y <- dnorm(x, mean, sd)
plot(x, y, xlab = "Values", ylab = "", main = "Narrow Distrubution", axes=FALSE)
sd<-50
mean<-50
x <- seq(0, 100, length = 1000) * sd +mean
y <- dnorm(x, mean, sd)
plot(x, y, xlab = "Values", ylab = "", main = "Narrow Distrubution", axes=FALSE)
sd<-2
mean<-50
x <- seq(0, 100, length = 1000) * sd +mean
y <- dnorm(x, mean, sd)
plot(x, y, xlab = "Values", ylab = "", main = "Narrow Distrubution", axes=FALSE)
x1 <- runif(1000, 0, 100)
x1
plot(x1, y, xlab = "Values", ylab = "", main = "Narrow Distrubution", axes=FALSE)
plot(density(x1), y, xlab = "Values", ylab = "", main = "Narrow Distrubution", axes=FALSE)
plot(density(x1), xlab = "Values", main = "Narrow Distrubution", axes=FALSE)
x <- seq(0, 100, length = 1000) * sd +mean
x1 <- runif(10000000, 0, 100)
y <- dnorm(x, mean, sd)
plot(density(x1), xlab = "Values", main = "Narrow Distrubution", axes=FALSE)
plot(density(x1), xlab = "Values", main = "Narrow Distrubution")
plot(density(x1), xlab = "Values", main = "Uniform Distribtion")
x1 <- rnorm(10000000, 0, 100)
plot(density(x1), xlab = "Values", main = "Uniform Distribtion")
x1 <- rnorm(10000000, 50, 10)
plot(density(x1), xlab = "Values", main = "Uniform Distribtion")
x1 <- rnorm(10000000, 50, 5)
plot(density(x1), xlab = "Values", main = "Uniform Distribtion")
plot(density(x1), xlab = "Values", ylim=c(0,0.1),main = "Uniform Distribtion")
plot(density(x1), xlab = "Values",  ylim=c(0,0.1), main = "Uniform Distribtion")
x1 <- rnorm(10000000, 50, 5)
plot(density(x1), xlab = "Values", ylim=c(0,0.1),main = "Uniform Distribtion")
x1 <- rnorm(10000000, 50, 5)
plot(density(x1), xlab = "Values", ylim=c(0,0.1),xlim=c(0,100),main = "Uniform Distribtion")
x1 <- rnorm(10000000, 50, 10)
plot(density(x1), xlab = "Values",  ylim=c(0,0.1), main = "Uniform Distribtion")
x1 <- dnorm(10000000, 50, 5)
plot(density(x1), xlab = "Values", ylim=c(0,0.1),xlim=c(0,100),main = "Uniform Distribtion")
x1 <- pnorm(10000000, 50, 5)
plot(density(x1), xlab = "Values", ylim=c(0,0.1),xlim=c(0,100),main = "Uniform Distribtion")
x1 <- dnorm(10000000, 50, 30)
plot(density(x1), xlab = "Values", ylim=c(0,0.1),xlim=c(0,100),main = "Uniform Distribtion")
x1 <- dnorm(10000000, 50, 30)
plot(density(x1), xlab = "Values", ylim=c(0,0.1),xlim=c(0,100),main = "Uniform Distribtion")
x1
x1 <- rnorm(10000000, 50, 30)
plot(density(x1), xlab = "Values", ylim=c(0,0.1),xlim=c(0,100),main = "Uniform Distribtion")
x1
x1 <- rnorm(10, 0.5, 0)
x1
x1 <- rnorm(10, 0.5, 0.1)
x1
x1 <- rnorm(10, 50, 10)
x1
x1 <- rnorm(10000, 50, 10)
x1
plot(density(x1), xlab = "Values", ylim=c(0,0.1),xlim=c(0,100),main = "Uniform Distribtion")
x1 <- rnorm(10000000, 50, 10)
plot(density(x1), xlab = "Values", ylim=c(0,0.1),xlim=c(0,100),main = "Uniform Distribtion")
x1
min(x1)
x1 <- rnorm(100000, 50, 10)
plot(density(x1), xlab = "Values", ylim=c(0,0.1),xlim=c(0,100),main = "Uniform Distribtion")
x1 <- rnorm(100000, 50, 30)
plot(density(x1), xlab = "Values",  ylim=c(0,0.1), main = "Uniform Distribtion")
x1 <- rnorm(10000, 50, 10)
plot(density(x1), xlab = "Values", ylim=c(0,0.1),xlim=c(0,100),main = "Uniform Distribtion")
x1 <- rnorm(10000, 50, 30)
plot(density(x1), xlab = "Values",  ylim=c(0,0.1), main = "Uniform Distribtion")
x1 <- rnorm(100, 50, 30)
plot(density(x1), xlab = "Values",  ylim=c(0,0.1), main = "Uniform Distribtion")
x1 <- rnorm(100, 50, 15)
plot(density(x1), xlab = "Values",  ylim=c(0,0.1), main = "Uniform Distribtion")
x1 <- rnorm(10000, 50, 15)
plot(density(x1), xlab = "Values",  ylim=c(0,0.1), main = "Uniform Distribtion")
x1 <- rnorm(10000, 50, 10)
plot(density(x1), xlab = "Values", ylim=c(0,0.1),xlim=c(0,100),main = "Uniform Distribtion")
sd<-2
x1 <- rnorm(10000, 50, 15)
plot(density(x1), xlab = "Values",  ylim=c(0,0.1), main = "Uniform Distribtion")
x1 <- rnorm(10000, 50, 5)
plot(density(x1), xlab = "Values", ylim=c(0,0.1),xlim=c(0,100),main = "Uniform Distribtion")
x1 <- rnorm(10000, 50, 15)
plot(density(x1), xlab = "Values",  ylim=c(0,0.1), main = "Wide Distribtion")
x1 <- rnorm(10000, 50, 5)
plot(density(x1), xlab = "Values", ylim=c(0,0.1),xlim=c(0,100),main = "Narrow Distribtion")
x1 <- rnorm(10000, 50, 8)
plot(density(x1), xlab = "Values", ylim=c(0,0.1),xlim=c(0,100),main = "Narrow Distribtion")
x1 <- rnorm(10000, 50, 15)
plot(density(x1), xlab = "Values",  ylim=c(0,0.1), main = "Wide Distribtion")
x <- seq(0, 100, length = 1000) * sd +mean
x1 <- rnorm(10000, 50, 15)
plot(density(x1), xlab = "Values", xlim=c(0,100), ylim=c(0,0.1), main = "Wide Distribtion")
knitr::opts_chunk$set(echo = TRUE)
abstracts <- read.xls ("Maths Psych_V2.xlsx", sheet = 1, header = TRUE,
stringsAsFactors=FALSE)
library("gdata")
library("lubridate")
abstracts <- read.xls ("Maths Psych_V2.xlsx", sheet = 1, header = TRUE,
stringsAsFactors=FALSE)
titles <- read.xls ("Maths Psych_V2.xlsx", sheet = 3, header = TRUE,
stringsAsFactors=FALSE)
titles <- titles[titles$Title!="",]
titles$Title <- iconv(titles$Title)
titles$All.Authors <- iconv(titles$All.Authors)
titles$Title
abstracts <- abstracts[abstracts$Abstract!="",]
abstracts <- abstracts[abstracts$Abstract!="",]
abstracts
abstracts <- abstracts[abstracts$Abstract!="",]
abstracts$Abstract <- iconv(abstract$Abstract)
abstracts <- abstracts[abstracts$Abstract!="",]
abstracts$Abstract <- iconv(abstracts$Abstract)
abstracts$All.Authors <- iconv(titles$All.Authors)
abstracts
View(titles)
View(titles)
abstracts <- read.xls ("Maths Psych_V2.xlsx", sheet = 1, header = TRUE,
stringsAsFactors=FALSE)
abstracts <- abstracts[abstracts$Abstract!="",]
abstracts$Abstract <- iconv(abstracts$Abstract)
abstracts$All.Authors <- iconv(titles$All.Authors)
abstracts <- abstracts[abstracts$All.Authors!="",]
abstracts$All.Authors <- iconv(titles$All.Authors)
abstracts <- read.xls ("Maths Psych_V2.xlsx", sheet = 1, header = TRUE,
stringsAsFactors=FALSE)
abstracts$Abstract <- iconv(abstracts$Abstract)
abstracts <- abstracts[abstracts$All.Authors!="",]
abstracts$All.Authors <- iconv(titles$All.Authors)
abstracts$All.Authors <- iconv(titles$All.Authors)
abstracts$All.Authors <- iconv(abstracts$All.Authors)
abstracts$Affiliations <- iconv(abstracts$Affiliations)
abstracts$Title <- iconv(abstracts$Title)
abstracts$All.Authors <- iconv(abstracts$All.Authors)
abstracts$Title
abstracts <- read.xls ("Maths Psych_V2.xlsx", sheet = 1, header = TRUE,
stringsAsFactors=FALSE)
#abstracts <- abstracts[abstracts$Abstract!="",]
abstracts$Abstract <- iconv(abstracts$Abstract)
abstracts <- abstracts[abstracts$All.Authors!="",]
abstracts$All.Authors <- iconv(abstracts$All.Authors)
abstracts$Affiliations <- iconv(abstracts$Affiliations)
abstracts$Title <- iconv(abstracts$Title)
abstracts$Title
abstracts <- read.xls ("Maths Psych_V2.xlsx", sheet = 1, header = TRUE,
stringsAsFactors=FALSE)
#abstracts <- abstracts[abstracts$Abstract!="",]
abstracts$Abstract <- iconv(abstracts$Abstract)
abstracts <- abstracts[abstracts$All.Authors!="",]
abstracts$All.Authors <- iconv(abstracts$All.Authors)
abstracts$Affiliations <- iconv(abstracts$Affiliations)
abstracts$Title <- iconv(abstracts$Title)
abstracts$Title
abstracts <- read.xls ("Maths Psych_V2.xlsx", sheet = 1, header = TRUE,
stringsAsFactors=FALSE)
abstracts$Abstract <- iconv(abstracts$Abstract)
abstracts <- abstracts[abstracts$All.Authors!="",]
abstracts$All.Authors <- iconv(abstracts$All.Authors)
abstracts$Affiliations <- iconv(abstracts$Affiliations)
abstracts$Title <- iconv(abstracts$Title)
abstracts$Title
#abstracts <- abstracts[abstracts$Abstract!="",]
abstracts$Abstract <- iconv(abstracts$Abstract)
abstracts <- abstracts[abstracts$All.Authors!="",]
abstracts$All.Authors <- iconv(abstracts$All.Authors)
abstracts$Affiliations <- iconv(abstracts$Affiliations)
abstracts$Title <- iconv(abstracts$Title)
abstracts$Title
abstracts$Affiliations
abstracts$All.Authors
i<-1:length(abstracts)
i
i<-1:length(abstracts$Title)
i
print(abstracts$Title[i])
print(abstracts$Title[i])
for (tt in 1:dim(abstracts)[1]){
print(abstracts$Title[i])
print(abstracts$Authors[i])
print(abstracts$Affiliation[i])
}
for (i in 1:dim(abstracts)[1]){
print(abstracts$Title[i])
print(abstracts$Authors[i])
print(abstracts$Affiliation[i])
}
for (i in 1:dim(abstracts)[1]){
print(abstracts$Title[i])
print(abstracts$All.Authors[i])
print(abstracts$Affiliation[i])
print(abstracts$Abstract[i])
}
titles <- read.xls ("Maths Psych_V2.xlsx", sheet = 3, header = TRUE,
stringsAsFactors=FALSE)
titles <- titles[titles$Title!="",]
titles$Title <- iconv(titles$Title)
titles$All.Authors <- iconv(titles$All.Authors)
titles$startt <- ""
for (days in 1:2){
for (mornaft in c("Morning", "Afternoon")){
if (days==1){
if (mornaft=="Morning"){
thetime <- strptime("2018-02-14 09:00", format="%Y-%m-%d %H:%M", tz="")
foct <- titles[titles$Sessions<3,]
} else {
foct <- titles[titles$Sessions<5 & titles$Sessions>2,]
}
} else if (days==2){
if (mornaft=="Morning"){
thetime <- strptime("2018-02-15 09:00", format="%Y-%m-%d %H:%M", tz="")
foct <- titles[titles$Sessions>4 & titles$Sessions<7,]
} else {
foct <- titles[titles$Sessions>6,]
}
}
if (mornaft=="Morning"){
cat(paste("#",
weekdays(as.Date(thetime)),
as.Date(thetime, format="%d/%m/%Y"),"\n\n"))
}
for (tt in 1:dim(foct)[1]){
foct$startt[tt] <- format(thetime, format="%H:%M")
if (foct$Title[tt]=="**Coffee**"){
thetime <- thetime + minutes(30)
} else if (foct$Title[tt]=="Lunch"){
thetime <- thetime + minutes(80)
} else if (foct$Allocation[tt]=="B"){
thetime <- thetime + minutes(10)
} else if (foct$Allocation[tt]=="F"){
thetime <- thetime + minutes(20)
} else if (foct$Title[tt]=="Dinner"){
thetime <- strptime("2018-02-15 18:00", format="%Y-%m-%d %H:%M", tz="")
foct$startt[tt] <- format(thetime, format="%H:%M")
} else {
thetime <- thetime + minutes(1)
}
}
kk <- dplyr::select(foct, c("startt","All.Authors","Title"))
kk <- dplyr::select(foct, c("startt","All.Authors","Title"))
cat(paste("##",
mornaft,"\n\n"))
print(knitr::kable(kk,
format='markdown',
col.names=c("Time","Authors","Title"),
row.names = FALSE,
escape=FALSE))
}
}
for (i in 1:dim(abstracts)[1]){
Title<-abstracts$Title[i]
Authors<-abstracts$All.Authors[i]
Affiliation<-abstracts$Affiliation[i]
Abstract<-abstracts$Abstract[i]
cat(Title)
}
Title
cat(Title)
abstracts <- read.xls ("Maths Psych_V2.xlsx", sheet = 1, header = TRUE,
stringsAsFactors=FALSE)
#abstracts <- abstracts[abstracts$Abstract!="",]
abstracts$Abstract <- iconv(abstracts$Abstract)
abstracts$All.Authors <- iconv(abstracts$All.Authors)
abstracts$Affiliations <- iconv(abstracts$Affiliations)
abstracts$Title <- iconv(abstracts$Title)
titles <- read.xls ("Maths Psych_V2.xlsx", sheet = 3, header = TRUE,
stringsAsFactors=FALSE)
titles <- titles[titles$Title!="",]
titles$Title <- iconv(titles$Title)
titles$All.Authors <- iconv(titles$All.Authors)
titles$startt <- ""
``` {r Abstracts, echo=FALSE, warning=FALSE, results="asis"}
for (i in 1:dim(abstracts)[1]){
Title<-abstracts$Title[i]
Authors<-abstracts$All.Authors[i]
Affiliation<-abstracts$Affiliation[i]
Abstract<-abstracts$Abstract[i]
cat(Title)
cat(Authors)
cat(Affiliation)
cat(Abstract)
}
for (i in 1:dim(abstracts)[1]){
Title<-abstracts$Title[i]
Authors<-abstracts$All.Authors[i]
Affiliation<-abstracts$Affiliation[i]
Abstract<-abstracts$Abstract[i]
cat(Title,"\n", Authors,"\n", Affiliation)
#cat(Abstract)
}
Abstract
setwd("~/Documents/AMPC18/programme")
install.packages("readPNG")
install.packages("grid")
knitr::opts_chunk$set(echo = TRUE)
library(png)
install.packages("png")
img <- readPNG(“images/river.png”)
img <- readPNG(images/river.png)
img <- readPNG("images/river.png")
img <- readPNG(“images/apr1.png”)
img <- readPNG("images/apr1.png")
libaray(png)
library(png)
img <- readPNG("images/apr1.png")
img <- readPNG("images/river.png")
img <- readPNG("images/Venue.png")
img <- readPNG("images/River.png")
img <- readPNG("images/Venue.png")
img <- readPNG("images/Dinner.png")
img <- readPNG("images/River.png")
setwd("~/Documents/AMPC18/programme")
grid.raster(img)
install.packages("gridBase")
“`{r fig.width=2, fig.height=2}
library(png)
library(grid)
img <- readPNG(“images/apr1.png”)
grid.raster(img)
“`
library(png)
library(gridBase)
img <- readPNG("images/Dinner")
setwd("~/Documents/AMPC18/programme")
img <- readPNG("images/Dinner")
img <- readPNG("images/River")
img <- readPNG("images/Venue")
abstracts <- read.xls ("Maths Psych_V2.xlsx", sheet = 1, header = TRUE,
stringsAsFactors=FALSE)
