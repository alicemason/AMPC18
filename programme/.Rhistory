xlab = "Condition",
ylab = "Recall Incentive",
pal = "black",
hdi.o = .7,
theme=4)
# ---- libraries ----
library(plyr)
library(dplyr)
library(farrellLab)
library(farrellMem)
library(ggplot2)
library(tidyr)
#library(lme4)
library("brms")
Recall <- ddply(recdat_e3, .(ID,task_order,trial_id), summarise, Total=sum(correct))
Recall<-ddply(Recall, .(ID,task_order), summarise, Rec=mean(Total)*10)
MeansRecallAcc<- Recall %>% group_by(task_order)%>%summarise(mean = mean(Rec))
print(MeansRecallAcc)
Recall_Acc_e3<-pirateplot(formula = Rec ~ task_order,
data = Recall,
xlab = "Condition",
ylab = "Recall Incentive",
pal = "black",
hdi.o = .7,
theme=4)
setwd("~/")
library(plyr)
library(dplyr)
library(farrellLab)
library(farrellMem)
library(ggplot2)
library(tidyr)
library (yarr)
library (yarrr)
Recall_Acc_e3<-pirateplot(formula = Rec ~ task_order,
data = Recall,
xlab = "Condition",
ylab = "Recall Incentive",
pal = "black",
hdi.o = .7,
theme=4)
bfttest_Rec_e3<-ttestBF(Recall$Rec[Recall$task_order=="RE"],Recall$Rec[Recall$task_order=="ER"],paired = FALSE)
bfttest_Rec_e3
sellr <- c(1,99) # range of possible selling prices (rectangular dist)
endowment <- 100 # TODO: check
evaldf_e3$value<-rowMeans(evaldf_e3[,4:10])
pBuy <- (evaldf_e3$WTP-sellr[1])/(sellr[2]-sellr[1])
evaldf_e3$expval <- pBuy * (endowment + evaldf_e3$value - (evaldf_e3$WTP + sellr[1])/2) +
(1-pBuy)*endowment
hist(evaldf_e3$expval, main="Expected Value Accuracy", xlab="Expected value")
# quick look, doesn't caluclate ppt averages
ddply(evaldf_e3, .(sID,task_order), summarise, meanv=mean(expval))
Expval_plot_e3<-pirateplot(formula = expval ~ task_order,
data = evaldf_e3,
xlab = "Condition",
ylab = "WTP Expected Value Accuracy",
pal = "black",
hdi.o = .7,
theme=1)
hist(evaldf_e3$expval, main="Expected Value Accuracy", xlab="Expected value")
# quick look, doesn't caluclate ppt averages
ddply(evaldf_e3, .(sID,task_order), summarise, meanv=mean(expval))
Expval_plot_e3<-pirateplot(formula = expval ~ task_order,
data = evaldf_e3,
xlab = "Condition",
ylab = "WTP Expected Value Accuracy",
pal = "black",
hdi.o = .7,
theme=4)
Expval_plot_e3<-pirateplot(formula = (expval-100) ~ task_order,
data = evaldf_e3,
xlab = "Condition",
ylab = "WTP Expected Value Accuracy",
pal = "black",
hdi.o = .7,
theme=4)
x<-runif(50,0,100)
plot(x)
hist(x)
x<-runif(1000,0,100)
hist(x)
plot (density(x))
y<-rnorm(1000,50,sd=10)
plot (density(y))
x<-runif(10000,0,100)
plot (density(y))
y<-rnorm(10000,50,sd=10)
plot (density(y))
y<-rnorm(1000,50,sd=30)
plot (density(y))
y<-rnorm(1000,50,sd=50)
plot (density(y))
y<-rnorm(1000,50,sd=1)
plot (density(y))
y<-rnorm(1000,50,sd=10)
plot (density(y))
# Display the Student's t distributions with various
# degrees of freedom and compare to the normal distribution
x <- seq(-4, 4, length=100)
hx <- dnorm(x)
degf <- c(1, 3, 8, 30)
colors <- c("red", "blue", "darkgreen", "gold", "black")
labels <- c("df=1", "df=3", "df=8", "df=30", "normal")
plot(x, hx, type="l", lty=2, xlab="x value",
ylab="Density", main="Comparison of t Distributions")
for (i in 1:4){
lines(x, dt(x,degf[i]), lwd=2, col=colors[i])
}
legend("topright", inset=.05, title="Distributions",
labels, lwd=2, lty=c(1, 1, 1, 1, 2), col=colors)
x <- seq(0, 100, length=100)
hx <- dnorm(x)
degf <- c(1, 3, 8, 30)
colors <- c("red", "blue", "darkgreen", "gold", "black")
labels <- c("df=1", "df=3", "df=8", "df=30", "normal")
plot(x, hx, type="l", lty=2, xlab="x value",
ylab="Density", main="Comparison of t Distributions")
for (i in 1:4){
lines(x, dt(x,degf[i]), lwd=2, col=colors[i])
}
legend("topright", inset=.05, title="Distributions",
labels, lwd=2, lty=c(1, 1, 1, 1, 2), col=colors)
# Display the Student's t distributions with various
# degrees of freedom and compare to the normal distribution
x <- seq(0, 100, length=100)
hx <- dnorm(x)
degf <- c(10, 30, 80, 30)
colors <- c("red", "blue", "darkgreen", "gold", "black")
labels <- c("df=1", "df=3", "df=8", "df=30", "normal")
plot(x, hx, type="l", lty=2, xlab="x value",
ylab="Density", main="Comparison of t Distributions")
for (i in 1:4){
lines(x, dt(x,degf[i]), lwd=2, col=colors[i])
}
legend("topright", inset=.05, title="Distributions",
labels, lwd=2, lty=c(1, 1, 1, 1, 2), col=colors)
# Display the Student's t distributions with various
# degrees of freedom and compare to the normal distribution
x <- seq(0, 100, length=100)
hx <- dnorm(x)
degf <- c(10, 30, 80, 30)
colors <- c("red", "blue", "darkgreen", "gold", "black")
labels <- c("df=1", "df=3", "df=8", "df=30", "normal")
plot(x, hx, type="l", lty=2, xlab="x value",
ylab="Density", main="Comparison of t Distributions")
for (i in 1:4){
lines(x, dt(x,degf[i]), lwd=2, col=colors[i])
}
legend("topright", inset=.05, title="Distributions",
labels, lwd=2, lty=c(1, 1, 1, 1, 2), col=colors)
# Display the Student's t distributions with various
# degrees of freedom and compare to the normal distribution
x <- seq(0, 100, length=100)
hx <- dnorm(x)
degf <- c(10, 30)
colors <- c("red", "blue")
labels <- c("df=1", "df=3")
plot(x, hx, type="l", lty=2, xlab="x value",
ylab="Density", main="Comparison of t Distributions")
for (i in 1:2){
lines(x, dt(x,degf[i]), lwd=2, col=colors[i])
}
legend("topright", inset=.05, title="Distributions",
labels, lwd=2, lty=c(1, 1), col=colors)
x <- seq(0, 100, length=100)
hx <- dnorm(x)
degf <- c(50, 50)
colors <- c("red", "blue")
labels <- c("df=1", "df=3")
plot(x, hx, type="l", lty=2, xlab="x value",
ylab="Density", main="Comparison of t Distributions")
for (i in 1:2){
lines(x, dt(x,degf[i]), lwd=2, col=colors[i])
}
legend("topright", inset=.05, title="Distributions",
labels, lwd=2, lty=c(1, 1), col=colors)
x <- seq(0, 100, length=100)
hx <- rnorm(x)
degf <- c(10, 50)
colors <- c("red", "blue")
labels <- c("df=1", "df=3")
plot(x, hx, type="l", lty=2, xlab="x value",
ylab="Density", main="Comparison of t Distributions")
for (i in 1:2){
lines(x, dt(x,degf[i]), lwd=2, col=colors[i])
}
legend("topright", inset=.05, title="Distributions",
labels, lwd=2, lty=c(1, 1), col=colors)
population_mean <- 50
population_sd <- 10
sd_to_fill <- 1
lower_bound <- population_mean - population_sd * sd_to_fill
upper_bound <- population_mean + population_sd * sd_to_fill
# Generates equally spaced values within 4 standard deviations of the mean
# This is used to connect the points on the curve so the more points the better
x <- seq(-4, 4, length = 1000) * population_sd + population_mean
# Returns the height of the probably distribution at each of those points
y <- dnorm(x, population_mean, population_sd)
# Generate the plot, where:
# - type: the type of plot to be drawn where "n" means do not plot the points
# - xlab: the title of the x axis
# - ylab: the title of the y axis
# - main: the overall title for the plot
# - axes: when false it suppresses the axis automatically generated by the high level plotting function so that we can create custom axis
plot(x, y, type="n", xlab = "Height (inches)", ylab = "", main = "Distribution of Men's Heights", axes = FALSE)
# Connect all of the points with each other to form the bell curve
lines(x, y)
# Returns a vector of boolean values representing whether the x value is between the two bounds then
# filters the values so that only the ones within the bounds are returned
bounds_filter <- x >= lower_bound & x <= upper_bound
x_within_bounds <- x[bounds_filter]
y_within_bounds <- y[bounds_filter]
# We want the filled in area to extend all the way down to the y axis which is why these two lines are necessary
# It makes the first point in the polygon (lower_bound, 0) and the last point (upper_bound, 0)
x_polygon <- c(lower_bound, x_within_bounds, upper_bound)
y_polygon <- c(0, y_within_bounds, 0)
polygon(x_polygon, y_polygon, col = "red")
# Now determine the probability that someone falls between the two bounds so we can display it above the curve
# Remember that pnorm returns the probability that a normally distributed random number will be less than the given number
probability_within_bounds <- pnorm(upper_bound, population_mean, sd) - pnorm(lower_bound, population_mean, population_sd)
# Concatenate the various values so we can display it on the curve
text <- paste("p(", lower_bound, "< height <", upper_bound, ") =", signif(probability_within_bounds, digits = 3))
# Display the text on the plot. The default "side" parameter is 3, representing the top of the plot.
mtext(text)
# Add an axis to the current plot, where:
# - side: which side of the plot the axis should be drawn on where 1 represents the bottom
# - at: the points at which the tick-marks are to be drawn
# - pos: the coordinate at which the axis line is to be drawn
sd_axis_bounds = 5
axis_bounds <- seq(-sd_axis_bounds * population_sd + population_mean, sd_axis_bounds * population_sd + population_mean, by = population_sd)
axis(side = 1, at = axis_bounds, pos = 0)
x <- seq(-4, 4, length=100)
hx <- dnorm(x)
degf <- c(1, 3, 8, 30)
colors <- c("red", "blue", "darkgreen", "gold", "black")
labels <- c("df=1", "df=3", "df=8", "df=30", "normal")
plot(x, hx, type="l", lty=2, xlab="x value",
ylab="Density", main="Comparison of t Distributions")
for (i in 1:4){
lines(x, dt(x,degf[i]), lwd=2, col=colors[i])
}
legend("topright", inset=.05, title="Distributions",
labels, lwd=2, lty=c(1, 1, 1, 1, 2), col=colors)
x <- seq(-4, 4, length=100)
hx <- dnorm(x)
degf <- c(10, 50, 40, 30)
colors <- c("red", "blue", "darkgreen", "gold", "black")
labels <- c("df=1", "df=3", "df=8", "df=30", "normal")
plot(x, hx, type="l", lty=2, xlab="x value",
ylab="Density", main="Comparison of t Distributions")
for (i in 1:4){
lines(x, dt(x,degf[i]), lwd=2, col=colors[i])
}
legend("topright", inset=.05, title="Distributions",
labels, lwd=2, lty=c(1, 1, 1, 1, 2), col=colors)
a<-dnorm(1000,50,10)
plot(a)
sd<-10
mean<-50
x <- seq(-4, 4, length = 1000) * sd +mean
y <- dnorm(x, mean, sd)
plot(x, y, type="n", xlab = "Values", ylab = "", main = "Narrow Distrubution", axes = FALSE)
x
plot(x, y, xlab = "Values", ylab = "", main = "Narrow Distrubution", axes = FALSE)
sd<-30
mean<-50
x <- seq(-4, 4, length = 1000) * sd +mean
y <- dnorm(x, mean, sd)
plot(x, y, xlab = "Values", ylab = "", main = "Narrow Distrubution", axes = FALSE)
sd<-30
mean<-50
x <- seq(-4, 4, length = 1000) * sd +mean
y <- dnorm(x, mean, sd)
plot(x, y, xlab = "Values", ylab = "", main = "Narrow Distrubution", axes = FALSE)
sd<-50
mean<-50
x <- seq(-4, 4, length = 1000) * sd +mean
y <- dnorm(x, mean, sd)
plot(x, y, xlab = "Values", ylab = "", main = "Narrow Distrubution", axes = FALSE)
x
sd<-5
mean<-50
x <- seq(-4, 4, length = 1000) * sd +mean
y <- dnorm(x, mean, sd)
plot(x, y, xlab = "Values", ylab = "", main = "Narrow Distrubution", axes = FALSE)
plot(x, y, xlab = "Values", ylab = "", main = "Narrow Distrubution")
sd<-5
mean<-50
x <- seq(-4, 4, length = 1000) * sd +mean
y <- dnorm(x, mean, sd)
plot(x, y, xlab = "Values", ylab = "Density", main = "Narrow Distrubution")
sd<-10
mean<-50
x <- seq(-4, 4, length = 1000) * sd +mean
y <- dnorm(x, mean, sd)
plot(x, y, xlab = "Values", ylab = "Density", main = "Narrow Distrubution")
sd<-10
mean<-50
x <- seq(-4, 4, length = 1000) * sd +mean
y <- dnorm(x, mean, sd)
plot(x, y, xlab = "Values", ylab = "Density", main = "Narrow Distrubution", xlim=c(0, 100), ylim=c(0, 1)))
sd<-10
mean<-50
x <- seq(-4, 4, length = 1000) * sd +mean
y <- dnorm(x, mean, sd)
plot(x, y, xlab = "Values", ylab = "Density", main = "Narrow Distrubution", xlim=c(0, 100), ylim=c(0, 1))
sd<-10
mean<-50
x <- seq(-4, 4, length = 1000) * sd +mean
y <- dnorm(x, mean, sd)
plot(x, y, xlab = "Values", ylab = "Density", main = "Narrow Distrubution", xlim=c(0, 100), ylim=c(0, 1))
sd<-10
mean<-50
x <- seq(-4, 4, length = 1000) * sd +mean
y <- dnorm(x, mean, sd)
plot(x, y, xlab = "Values", ylab = "Density", main = "Narrow Distrubution", xlim=c(0, 100), ylim=c(0, 1))
sd<-10
mean<-50
x <- seq(-4, 4, length = 1000) * sd +mean
y <- dnorm(x, mean, sd)
plot(x, y, xlab = "Values", ylab = "Density", main = "Narrow Distrubution", xlim=c(0, 100), ylim=c(0,0.4))
sd<-10
mean<-50
x <- seq(-4, 4, length = 1000) * sd +mean
y <- dnorm(x, mean, sd)
plot(x, y, xlab = "Values", ylab = "Density", main = "Narrow Distrubution", xlim=c(0, 100), ylim=c(0,0.1))
sd<-50
mean<-50
x <- seq(-4, 4, length = 1000) * sd +mean
y <- dnorm(x, mean, sd)
plot(x, y, xlab = "Values", ylab = "Density", main = "Narrow Distrubution", xlim=c(0, 100), ylim=c(0,0.1))
sd<-30
mean<-50
x <- seq(-4, 4, length = 1000) * sd +mean
y <- dnorm(x, mean, sd)
plot(x, y, xlab = "Values", ylab = "Density", main = "Narrow Distrubution", xlim=c(0, 100), ylim=c(0,0.1))
sd<-20
mean<-50
x <- seq(-4, 4, length = 1000) * sd +mean
y <- dnorm(x, mean, sd)
plot(x, y, xlab = "Values", ylab = "Density", main = "Narrow Distrubution", xlim=c(0, 100), ylim=c(0,0.1))
sd<-20
mean<-50
x <- seq(-4, 4, length = 1000) * sd +mean
y <- dnorm(x, mean, sd)
plot(x, y, xlab = "Values", ylab = "Density", main = "Narrow Distrubution", xlim=c(0, 100), ylim=c(0,0.0.5))
sd<-20
mean<-50
x <- seq(-4, 4, length = 1000) * sd +mean
y <- dnorm(x, mean, sd)
plot(x, y, xlab = "Values", ylab = "Density", main = "Narrow Distrubution", xlim=c(0, 100), ylim=c(0,0.5))
y
x
sd<-20
mean<-50
x <- seq(-4, 4, length = 1000) * sd +mean
y <- dnorm(x, mean, sd)
plot(x, y, xlab = "Values", ylab = "Density", main = "Narrow Distrubution", ylim=c(0,0.5))
sd<-20
mean<-50
x <- seq(-4, 4, length = 1000) * sd +mean
y <- dnorm(x, mean, sd)
plot(x, y, xlab = "Values", ylab = "Density", main = "Narrow Distrubution", axis=FALSE)
sd<-20
mean<-50
x <- seq(-4, 4, length = 1000) * sd +mean
y <- dnorm(x, mean, sd)
plot(x, y, xlab = "Values", ylab = "Density", main = "Narrow Distrubution", axes=FALSE)
axis(2, seq(0, 1, 0.2))
axis(1, seq(0, 1, 0.2))
plot(x, y, xlab = "Values", main = "Narrow Distrubution", axes=FALSE)
plot(x, y, xlab = "Values", main = "Narrow Distrubution", axes=FALSE)
plot(x, y, xlab = "Values", ylab = "", main = "Narrow Distrubution", axes=FALSE)
mean<-500
sd<-20
mean<-500
x <- seq(-4, 4, length = 1000) * sd +mean
y <- dnorm(x, mean, sd)
plot(x, y, xlab = "Values", ylab = "", main = "Narrow Distrubution", axes=FALSE)
sd<-50
mean<-50
x <- seq(-4, 4, length = 1000) * sd +mean
y <- dnorm(x, mean, sd)
plot(x, y, xlab = "Values", ylab = "", main = "Narrow Distrubution", axes=FALSE)
sd<-50
mean<-50
x <- seq(0, 100, length = 1000) * sd +mean
y <- dnorm(x, mean, sd)
plot(x, y, xlab = "Values", ylab = "", main = "Narrow Distrubution", axes=FALSE)
sd<-2
mean<-50
x <- seq(0, 100, length = 1000) * sd +mean
y <- dnorm(x, mean, sd)
plot(x, y, xlab = "Values", ylab = "", main = "Narrow Distrubution", axes=FALSE)
x1 <- runif(1000, 0, 100)
x1
plot(x1, y, xlab = "Values", ylab = "", main = "Narrow Distrubution", axes=FALSE)
plot(density(x1), y, xlab = "Values", ylab = "", main = "Narrow Distrubution", axes=FALSE)
plot(density(x1), xlab = "Values", main = "Narrow Distrubution", axes=FALSE)
x <- seq(0, 100, length = 1000) * sd +mean
x1 <- runif(10000000, 0, 100)
y <- dnorm(x, mean, sd)
plot(density(x1), xlab = "Values", main = "Narrow Distrubution", axes=FALSE)
plot(density(x1), xlab = "Values", main = "Narrow Distrubution")
plot(density(x1), xlab = "Values", main = "Uniform Distribtion")
x1 <- rnorm(10000000, 0, 100)
plot(density(x1), xlab = "Values", main = "Uniform Distribtion")
x1 <- rnorm(10000000, 50, 10)
plot(density(x1), xlab = "Values", main = "Uniform Distribtion")
x1 <- rnorm(10000000, 50, 5)
plot(density(x1), xlab = "Values", main = "Uniform Distribtion")
plot(density(x1), xlab = "Values", ylim=c(0,0.1),main = "Uniform Distribtion")
plot(density(x1), xlab = "Values",  ylim=c(0,0.1), main = "Uniform Distribtion")
x1 <- rnorm(10000000, 50, 5)
plot(density(x1), xlab = "Values", ylim=c(0,0.1),main = "Uniform Distribtion")
x1 <- rnorm(10000000, 50, 5)
plot(density(x1), xlab = "Values", ylim=c(0,0.1),xlim=c(0,100),main = "Uniform Distribtion")
x1 <- rnorm(10000000, 50, 10)
plot(density(x1), xlab = "Values",  ylim=c(0,0.1), main = "Uniform Distribtion")
x1 <- dnorm(10000000, 50, 5)
plot(density(x1), xlab = "Values", ylim=c(0,0.1),xlim=c(0,100),main = "Uniform Distribtion")
x1 <- pnorm(10000000, 50, 5)
plot(density(x1), xlab = "Values", ylim=c(0,0.1),xlim=c(0,100),main = "Uniform Distribtion")
x1 <- dnorm(10000000, 50, 30)
plot(density(x1), xlab = "Values", ylim=c(0,0.1),xlim=c(0,100),main = "Uniform Distribtion")
x1 <- dnorm(10000000, 50, 30)
plot(density(x1), xlab = "Values", ylim=c(0,0.1),xlim=c(0,100),main = "Uniform Distribtion")
x1
x1 <- rnorm(10000000, 50, 30)
plot(density(x1), xlab = "Values", ylim=c(0,0.1),xlim=c(0,100),main = "Uniform Distribtion")
x1
x1 <- rnorm(10, 0.5, 0)
x1
x1 <- rnorm(10, 0.5, 0.1)
x1
x1 <- rnorm(10, 50, 10)
x1
x1 <- rnorm(10000, 50, 10)
x1
plot(density(x1), xlab = "Values", ylim=c(0,0.1),xlim=c(0,100),main = "Uniform Distribtion")
x1 <- rnorm(10000000, 50, 10)
plot(density(x1), xlab = "Values", ylim=c(0,0.1),xlim=c(0,100),main = "Uniform Distribtion")
x1
min(x1)
x1 <- rnorm(100000, 50, 10)
plot(density(x1), xlab = "Values", ylim=c(0,0.1),xlim=c(0,100),main = "Uniform Distribtion")
x1 <- rnorm(100000, 50, 30)
plot(density(x1), xlab = "Values",  ylim=c(0,0.1), main = "Uniform Distribtion")
x1 <- rnorm(10000, 50, 10)
plot(density(x1), xlab = "Values", ylim=c(0,0.1),xlim=c(0,100),main = "Uniform Distribtion")
x1 <- rnorm(10000, 50, 30)
plot(density(x1), xlab = "Values",  ylim=c(0,0.1), main = "Uniform Distribtion")
x1 <- rnorm(100, 50, 30)
plot(density(x1), xlab = "Values",  ylim=c(0,0.1), main = "Uniform Distribtion")
x1 <- rnorm(100, 50, 15)
plot(density(x1), xlab = "Values",  ylim=c(0,0.1), main = "Uniform Distribtion")
x1 <- rnorm(10000, 50, 15)
plot(density(x1), xlab = "Values",  ylim=c(0,0.1), main = "Uniform Distribtion")
x1 <- rnorm(10000, 50, 10)
plot(density(x1), xlab = "Values", ylim=c(0,0.1),xlim=c(0,100),main = "Uniform Distribtion")
sd<-2
x1 <- rnorm(10000, 50, 15)
plot(density(x1), xlab = "Values",  ylim=c(0,0.1), main = "Uniform Distribtion")
x1 <- rnorm(10000, 50, 5)
plot(density(x1), xlab = "Values", ylim=c(0,0.1),xlim=c(0,100),main = "Uniform Distribtion")
x1 <- rnorm(10000, 50, 15)
plot(density(x1), xlab = "Values",  ylim=c(0,0.1), main = "Wide Distribtion")
x1 <- rnorm(10000, 50, 5)
plot(density(x1), xlab = "Values", ylim=c(0,0.1),xlim=c(0,100),main = "Narrow Distribtion")
x1 <- rnorm(10000, 50, 8)
plot(density(x1), xlab = "Values", ylim=c(0,0.1),xlim=c(0,100),main = "Narrow Distribtion")
x1 <- rnorm(10000, 50, 15)
plot(density(x1), xlab = "Values",  ylim=c(0,0.1), main = "Wide Distribtion")
x <- seq(0, 100, length = 1000) * sd +mean
x1 <- rnorm(10000, 50, 15)
plot(density(x1), xlab = "Values", xlim=c(0,100), ylim=c(0,0.1), main = "Wide Distribtion")
---
title: "AMPC18 Schedule"
author: ""
date: ""
output:
pdf_document:
keep_tex: true
html_document:
keep_md: true
theme: "cerulean"
---
<style>
th, td {
padding: 5px;
}
tr:nth-child(even) {
background-color: #dddddd;
}
</style>
\renewcommand{\arraystretch}{1.5}
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
```{r libraries, include=FALSE}
library("gdata")
library("lubridate")
```
knitr::opts_chunk$set(echo = TRUE)
abstracts <- read.xls ("Maths Psych_V2.xlsx", sheet = 1, header = TRUE,
stringsAsFactors=FALSE)
#abstracts <- read.xls ("Maths Psych_V2.xlsx", sheet = 1, header = TRUE,
#stringsAsFactors=FALSE)
titles <- read.xls ("Maths Psych_V2.xlsx", sheet = 3, header = TRUE,
stringsAsFactors=FALSE)
setwd("~/Documents/AMPC18/assets")
setwd("~/Documents/AMPC18/programme")
